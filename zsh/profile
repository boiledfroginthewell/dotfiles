# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# This file is not read when logged in with X window system, where it does not have interactive shell.
# Note: To read this file on X window login, souce this in ~/.xsessinrc. In this case, bsh is used instead of the login shell.
# Note: this file is read when ssh login.

export XDG_CONFIG_HOME="${HOME}/.config"
export XDG_DATA_HOME="${HOME}/.local/share"
export XDG_CACHE_HOME="${HOME}/.cache"


# # Node.js (NVM)
if ! echo $OSTYPE | grep -q darwin; then
	export NVM_DIR="$XDG_CONFIG_HOME/nvm"
	[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
fi


# Python (Pyenv)
if ! echo $OSTYPE | grep -q darwin; then
	export PYENV_ROOT="$HOME/opt/pyenv"
else
	export PYENV_ROOT="$HOME/.pyenv"
	export PATH="$PYENV_ROOT/bin:$PATH"
	eval "$(pyenv init --path)"
fi
[ -d "$PYENV_ROOT/shims" ] && export PATH="$PYENV_ROOT/shims:$PATH"


# PATH for bin or opt
export PATH="$HOME/opt/bin:/opt/bin:$PATH"
# set PATH so it includes user's private bin if it exists
[ -d "$HOME/.local/bin" ] && PATH="$HOME/.local/bin:$PATH"
[ -d "$HOME/bin" ] && PATH="$HOME/bin:$PATH"

[ "$shell" = "zsh" ] && type pyenv > /dev/null && eval "$(pyenv virtualenv-init -)"

if [[ $OSTYPE = *darwin* ]]; then
	export PATH="$PATH:/Applications/Firefox.app/Contents/MacOS/"
fi

