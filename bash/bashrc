# If not running interactively, don't do anything
case $- in
	*i*) ;;
	*) return;;
esac

export XDG_CONFIG_HOME="${XDG_CONFIGHOME:-${HOME}/.config}"
export XDG_DATA_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}"
export XDG_CACHE_HOME="${XDG_CACHE_HOME:-${HOME}/.cache}"
CONF_DIR=${XDG_CONFIG_HOME}/bash

source "${CONF_DIR}/ps1.sh"
export LANG=ja_JP.UTF-8

# History Configuration
# ----------------------------
# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth
# append to the history file, don't overwrite it
shopt -s histappend
export HISTFILESIZE=20000
export HISTIGNORE='sudo *:*;sudo *:*; sudo *:l:history:history *'
export PROMPT_COMMAND="${PROMPT_COMMAND}history -a;"


# Color Configuration
# --------------------------
bg_color=${COLORFGBG##*;}
if [ -n "$bg_color" ]; then
	if [ $bg_color -ge 9 ]; then
		export COLOR_MODE=light
	else
		export COLOR_MODE=dark
	fi
elif [ -z "$COLOR_MODE" ]; then
	export COLOR_MODE=dark
fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
	test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
	IS_COLOR_AVAILABLE=1
	alias grep='grep --color=auto'
	alias fgrep='fgrep --color=auto'
	alias egrep='egrep --color=auto'
fi

export DELTA_FEATURES="+theme:${COLOR_MODE:-dark}"
if [ "$COLOR_MODE" = "light" ]; then
	export BAT_THEME="Monokai Extended Light"
fi

# Terminal Configuration
# -----------------------
# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
	if [ -f /usr/share/bash-completion/bash_completion ]; then
		. /usr/share/bash-completion/bash_completion
	elif [ -f /etc/bash_completion ]; then
		. /etc/bash_completion
	fi
fi

# terminal shortcuts
stty sane
stty stop undef

export FIGNORE=__pycache__
shopt -s cdspell
shopt -s dirspell
shopt -s no_empty_cmd_completion
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize
# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
shopt -s globstar


# ### Aliases
alias info="info --vi-keys"

alias diff="diff --ignore-space-change --ignore-trailing-space"
alias rg="rg --smart-case"
if type hub &> /dev/null; then
	alias git=hub
fi
g() {
	if [ $# -eq 0 ]; then
		git status
	else
		git "$@"
	fi
}
alias gg="git graph"

if type -t bat > /dev/null; then
	export DELTA_PAGER=bat
	export MANPAGER="sh -c 'col -bx | bat -l man -p'"
fi

export BAT_STYLE="changes,header,grid"
LESS_COMMAND=$(
	type -t bat > /dev/null && echo bat \
	|| (type -t lv > /dev/null && echo lv) \
	|| echo less
)
alias less=$LESS_COMMAND
OPEN_COMMAND=$(
	type -t exo-open > /dev/null  && echo exo-open \
	|| (type -t xdg-open > /dev/null && echo xdg-open) \
	|| (type -t start > /dev/null && echo start) \
	|| echo open
)
alias open=$OPEN_COMMAND
LS_COMMAND=$(
	type -t exa > /dev/null && echo exa \
	|| ([ "$IS_COLOR_AVAILABLE" = 1 ] && echo ls --color=auto -p) \
	|| echo ls
)
alias ls=$LS_COMMAND

# time style for `ls -l` command output
export TIME_STYLE=long-iso

export PATH="$(realpath "${CONF_DIR}/../bin"):$PATH"


# Load additional configuration files
# --------------------------------
# loadLazily trigger_command other_triggers source_file [arguments ...]
mybashrc::lazyLoad::loadLazily() {
	local TRIGGER_COMMAND=$1
	for trig in ${2//,/ }; do
		unalias $trig
	done
	source "$3"
	shift 3
	$TRIGGER_COMMAND "$@"
}

EXTRA_RC=()
if [ $(uname -s) = Darwin ]; then
	EXTRA_RC+=("${CONF_DIR}/macrc/*.sh")
fi
if [ "$OSTYPE" = msys ]; then
	EXTRA_RC+=("${CONF_DIR}/winrc/*.sh")
fi
for x in ${CONF_DIR}/rc/*.sh ${EXTRA_RC[@]}; do
	if [[ "$x" != *".lazy"* ]]; then
		# T=$(gdate +'1%-S%N')
		source $x
		# echo -e $(( ($(gdate +'1%-S%N') - $T) / 100000 )) "\t" $x
	else
		# Extract trigger command: formats=TRIGGER.lazy.sh or foo.lazy=TRIGGER,TRIG2.sh
		filename=$(basename $x)
		lazy=${filename##*.lazy}
		lazy=${lazy%%.*}
		if [ "${lazy:0:1}" != "=" ]; then
			trigger_commands=${filename%%.lazy*}
		else
			trigger_commands=${lazy:1}
		fi

		for trig in ${trigger_commands//,/ }; do
			alias $trig="mybashrc::lazyLoad::loadLazily $trig $trigger_commands \"$x\""
		done
	fi
done

