#!/usr/bin/env bash

# Show absolute path or relative path, which is shorter
compact() {
	while read line; do
		local ABS="$line"
		local REL=${ABS#$PWD/}
		REL=${REL:-.}

		echo ${REL}
	done
}

toLinuxPath() {
	sed 's~\\~/~g' | xargs cygpath
}

if [[ $OS = *Windows* ]]; then
	TO_LINUX_PATH="toLinuxPath"
else
	TO_LINUX_PATH="cat"
fi

get_project_root() {
	if [ -n "$1" ]; then
		cd "$1"
	fi
	local PARENT_DIR="$(git rev-parse --show-toplevel 2>/dev/null)"
	if [ -z "$PARENT_DIR" ]; then
		PARENT_DIR="$PWD"
		PROJECT_ROOT=""
	else
		PROJECT_ROOT="$PARENT_DIR"
	fi

	while [ "$PARENT_DIR" != "/" ] && [[ "$PARENT_DIR" != [A-Z]: ]]; do
		PARENT_DIR=$(dirname "$PARENT_DIR")
	done

	echo "$PROJECT_ROOT"
}

if [ "$1" = "-H" ]; then
	NO_HISTORY=1
	shift
fi

directory="${1}"
if [ -z "$directory" ]; then
	directory=$(get_project_root "${directory}")
fi

cat \
	<(fd . ${directory}) \
	<([ -z "$NO_HISTORY" ] && < "${ZSHZ_DATA:-$XDG_CACHE_HOME/z}" sort -t '|' -k 2,3 -rn | cut -d '|' -f 1) | \
$TO_LINUX_PATH | \
compact |\
awk '!x[$0]++' |\
sed "s:$HOME:~:"

